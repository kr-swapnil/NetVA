#Installation of NetVA package
##NetVA depends on igraph package. Therefore, the users have to install igraph first before installing NetVA.
install.packages("igraph")

##For installing the NetVA from GitHub, the users will need devtools package. If the users have devtools 
##installed already in their systems, then directly can proceed for the installation of the NetVA.
##If devtools is not installed, then the users will have to install it first before installing the NetVA.
install.packages("devtools")
devtools::install_github("kr-swapnil/NetVA")

#Load NetVA and igraph packages
> library(NetVA)
> library(igraph)

#Load protein-protein interactions of breast cancer as data.frame
> bc.ppi <- load_bcppi()

#Convert the dataframe to an igraph graph object
> bc.net <- graph.data.frame(bc.ppi, directed = FALSE)

#Store name of all vertices in v as character vector
> v <- vertex_attr(bc.net)$name

#Run netva using single core/default option for one protein or more than one proteins at once
#compatible for all Linux, macOS and Windows machines
> netva.res <- netva(v[1], bc.net, "full")  #Only 1st protein
> netva.res <- netva(v[2], bc.net, "full")  #Only 2nd protein
> netva.res <- netva(v[6], bc.net, "full")  #Only 6th protein
> netva.res <- netva(v[7], bc.net, "full")  #Only 7th protein
> netva.res <- netva(v[c(1, 6, 7)], bc.net, "full") #Three proteins, i.e., 1st, 6th and 7th at once

#Run netva using multiple core option for all proteins one by one (compatible only for all Linux and macOS machines)
> netva.res <- netva.mc(v, bc.net, "full", ncore = 36)

#Run netva using single core/default option for all proteins one by one (compatible for all Linux, macOS and Windows machines)
> netva.res <- netva.sc(v, bc.net, "full")

#Detect vulnerable proteins based on each property one by one
> anc.outliers <- detectVPs(v, netva.res[,1], "ANC") #Average node connectivity
> nd.outliers <- detectVPs(v, netva.res[,2], "ND") #Network density
> nc.outliers <- detectVPs(v, netva.res[,3], "NC") #Network centralization
> apl.outliers <- detectVPs(v, netva.res[,4], "APL") #Average path length
> bet.outliers <- detectVPs(v, netva.res[,5], "BET") #Betweenness centrality
> ap.outliers <- detectVPs(v, netva.res[,6], "AP") #Articulation point
> ndr.outliers <- detectVPs(v, netva.res[,7], "NDR") #Network diameter
> cc.outliers <- detectVPs(v, netva.res[,8], "CC") #Clustering coefficient
> het.outliers <- detectVPs(v, netva.res[,9], "HET") #Heterogeneity

#Detect hubs and bottlenecks
> hubs <- detectHubs(bc.net)
> bottlenecks <- detectBottlenecks(bc.net)

#Calculate value of heterogeneity of a network
> net.het <- heterogeneity(bc.net)
