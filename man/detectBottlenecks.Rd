% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detectHB.R
\name{detectBottlenecks}
\alias{detectBottlenecks}
\title{Identify all possible bottlenecks based on the pareto principle of Eighty-twenty rule (by default) for a given network}
\usage{
detectBottlenecks(
  net,
  method = "ETP",
  p = 20,
  validate = TRUE,
  perturb = 5,
  iter = round(100/perturb),
  ng = iter
)
}
\arguments{
\item{net}{An igraph graph object.}

\item{method}{Method to identify bottleneck nodes. Currently this function supports only the method of Eighty-twenty principle (ETP).}

\item{p}{Value of percent of nodes/proteins to be considered for the determination of degree cutoff. By default value is 20\%. It is an optional parameter.}

\item{validate}{Logical, TRUE or FALSE, whether to validate identified bottlenecks by rewiring of a given percentage of edges.}

\item{perturb}{Percentage value to rewire edges.}

\item{iter}{Number of iterations to perform rewiring and construction of new rewired networks. The default value is round(100/perturb).}

\item{ng}{Number of new graphs/networks to be constructed. The default value is the value of iter.}
}
\value{
If validate = TRUE, a list with two (named) numeric vectors, first containing all possible bottlenecks with their betweenness values before edge perturbation and second containing all possible bottlenecks with their betweenness values (from the original network) after the edge perturbation. Otherwise, a (named) numeric vector with all possible bottlenecks with their corresponding betweenness values as identified in the given network.
}
\description{
Identify all possible bottlenecks based on the pareto principle of Eighty-twenty rule (by default) for a given network
}
